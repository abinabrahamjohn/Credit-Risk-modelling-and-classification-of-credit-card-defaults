%Clear workspace, command window and close figures
 clear all;
 clc;
 close all;

%Dataloading- Need to make it independent of location
credit_default=readtable('default_of_credit_card_clients.xls');
%removing header
credit_default_data=credit_default(2:size(credit_default,1),:);

%exploratory data analysis
%scatter plot age-default
%scatter(credit_default_data(:,6),credit_default_data(:,25))

%correlation matrix

%visualization

%data cleaning

%remove correlated columns

%feature engineering

%Splitting data  into training and test data
%Should be randomly picked
%train: 80%, test: 20%
cv = cvpartition(size(credit_default_data,1),'HoldOut',0.2);
idx = cv.test;
% Separate to training and test data
train_credit_default_data = credit_default_data(~idx,:);
test_credit_default_data  = credit_default_data(idx,:);


%Data split into features and labels
train_credit_default_labels=train_credit_default_data(:,25);
train_credit_default_features=train_credit_default_data(:,1:24);

test_credit_default_labels=test_credit_default_data(:,25);
test_credit_default_features=test_credit_default_data(:,1:24);

%Modeling different classifiers

%using random forest
%Need to justify selected number
treeRandomForest = TreeBagger(5,train_credit_default_features,train_credit_default_labels);
treeRandomForestResult=predict(treeRandomForest,test_credit_default_features)
%confusion matrix for random forest classifier
confusionchart(table2cell(test_credit_default_labels),treeRandomForestResult)
title('Confusion Matrix for Random Forest Classifier')

%using naive bayesian classifier
naiveBayes = fitcnb(train_credit_default_features,train_credit_default_labels);
naiveBayesResult=predict(naiveBayes,test_credit_default_features)

%confusion matrix for naive bayesian classifier
figure(2)
confusionchart(table2cell(test_credit_default_labels),naiveBayesResult)
title('Confusion Matrix for Naive Bayesian Classifier')

%measure performance
